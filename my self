//html and css code

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Your Portfolio</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #00ff88;
            --secondary-color: #212121;
            --bg-color: #121212;
            --text-color: #ffffff;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            background-color: var(--bg-color);
            color: var(--text-color);
            overflow-x: hidden;
        }

        /* Animated Background */
        .animated-bg {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            background: linear-gradient(45deg, #080808, #1a1a1a);
        }

        /* Navigation */
        .navbar {
            position: fixed;
            top: 0;
            width: 100%;
            padding: 1.5rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            backdrop-filter: blur(10px);
            z-index: 1000;
        }

        .nav-links {
            display: flex;
            gap: 2rem;
        }

        .nav-links a {
            color: var(--text-color);
            text-decoration: none;
            position: relative;
            transition: 0.3s;
        }

        .nav-links a::after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 0;
            width: 0;
            height: 2px;
            background: var(--primary-color);
            transition: 0.3s;
        }

        .nav-links a:hover::after {
            width: 100%;
        }

        /* Hero Section */
        .hero {
            height: 100vh;
            display: flex;
            align-items: center;
            padding: 0 10%;
        }

        .hero-content {
            max-width: 600px;
        }

        .hero-content h1 {
            font-size: 3.5rem;
            margin-bottom: 1rem;
            background: linear-gradient(45deg, var(--primary-color), #00ccff);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .typewriter {
            font-size: 1.5rem;
            color: #888;
            margin-bottom: 2rem;
        }

        /* Projects Section */
        .projects {
            padding: 5rem 10%;
        }

        .project-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
            margin-top: 3rem;
        }

        .project-card {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 15px;
            padding: 1.5rem;
            transition: 0.3s;
            cursor: pointer;
            position: relative;
            overflow: hidden;
        }

        .project-card:hover {
            transform: translateY(-10px);
            background: rgba(255, 255, 255, 0.1);
        }

        .project-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(
                90deg,
                transparent,
                rgba(255, 255, 255, 0.2),
                transparent
            );
            transition: 0.5s;
        }

        .project-card:hover::before {
            left: 100%;
        }

        /* Skills Section */
        .skills {
            padding: 5rem 10%;
        }

        .skill-bars {
            display: grid;
            gap: 1.5rem;
            margin-top: 2rem;
        }

        .skill-bar {
            background: rgba(255, 255, 255, 0.05);
            padding: 1rem;
            border-radius: 10px;
            position: relative;
            overflow: hidden;
        }

        .skill-progress {
            position: absolute;
            left: 0;
            top: 0;
            height: 100%;
            background: var(--primary-color);
            width: 0;
            transition: 1s;
        }

        /* Contact Section */
        .contact {
            padding: 5rem 10%;
            text-align: center;
        }

        .contact-form {
            max-width: 600px;
            margin: 0 auto;
        }

        .form-input {
            width: 100%;
            padding: 1rem;
            margin: 1rem 0;
            background: rgba(255, 255, 255, 0.05);
            border: none;
            border-radius: 5px;
            color: white;
        }

        /* Animation Classes */
        .hidden {
            opacity: 0;
            transform: translateY(50px);
            transition: 1s;
        }

        .show {
            opacity: 1;
            transform: translateY(0);
        }

    </style>
</head>
<body>
    <div class="animated-bg"></div>
    
    <nav class="navbar">
        <h1>my portfolio</h1>
        <div class="nav-links">
            <a href="#home">Home</a>
            <a href="#projects">Projects</a>
            <a href="#skills">Skills</a>
            <a href="#contact">Contact</a>
        </div>
    </nav>

    <section id="home" class="hero">
        <div class="hero-content">
            <h1>Hi, I'm sreedhar</h1>
            <div class="typewriter">Full Stack Developer </div>
            <div class="social-links">
                <a href="#"><i class="fab fa-github"></i></a>
                <a href="#"><i class="fab fa-linkedin"></i></a>
                <a href="#"><i class="fab fa-twitter"></i></a>
            </div>
        </div>
    </section>

    <section id="projects" class="projects">
        <h2>Featured Projects</h2>
        <div class="project-grid">
            <div class="project-card ">
                <h1>Modern websites</h1>
                <div class="">.</div>
                <h2>ecommerce website</h2>
            </div>
            <!-- Add more project cards -->
        </div>
    </section>

    <section id="skills" class="skills">
        <h2>Technical Skills</h2>
        <div class="skill-bars">
            <div class="skill-bar ">
                <div class="skill-progress" style="width: 100%"></div>
                <h2>Html</h2>
                
            </div>
            <div class="skill-bar ">
                <div class="skill-progress" style="width: 100%"></div>
                <h2>CSS</h2>
                
            </div>
            <div class="skill-bar ">
                <div class="skill-progress" style="width: 90%"></div>
                <h2>SCRIPT</h2>
                
            </div>
            <div class="skill-bar ">
                <div class="skill-progress" style="width: 100%"></div>
                <h2>Bootstrap</h2>
                
            </div>
            <div class="skill-bar ">
                <div class="skill-progress" style="width: 100%"></div>
                <h2>react.js</h2>
                
            </div>
            <div class="skill-bar ">
                <div class="skill-progress" style="width: 90%"></div>
                <h2>next.js</h2>
                
            </div>
            <!-- Add more skill bars -->
        </div>
    </section>

    <section id="contact" class="contact">
        <h2>Get In Touch</h2>
        <form class="contact-form">
            <input type="text" class="form-input" placeholder="Name">
            <input type="email" class="form-input" placeholder="Email">
            <textarea class="form-input" rows="5" placeholder="Message"></textarea>
            <button class="form-input btn">Send Message</button>
        </form>
    </section>

    <script>
        // Scroll Animations
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('show');
                }
            });
        }, { threshold: 0.1 });

        document.querySelectorAll('.hidden').forEach((el) => observer.observe(el));

        // Dynamic Skill Bar Animation
        document.querySelectorAll('.skill-bar').forEach(bar => {
            const progress = bar.querySelector('.skill-progress');
            const width = progress.style.width;
            progress.style.width = '0';
            setTimeout(() => {
                progress.style.width = width;
            }, 500);
        });

        // Dynamic Theme Toggle
        const themeToggle = document.createElement('div');
        themeToggle.style.position = 'fixed';
        themeToggle.style.bottom = '20px';
        themeToggle.style.right = '20px';
        themeToggle.style.cursor = 'pointer';
        themeToggle.innerHTML = '<i class="fas fa-moon"></i>';
        document.body.appendChild(themeToggle);

        themeToggle.addEventListener('click', () => {
            document.body.classList.toggle('light-theme');
            themeToggle.innerHTML = document.body.classList.contains('light-theme') ? 
                '<i class="fas fa-sun"></i>' : '<i class="fas fa-moon"></i>';
        });

        // Typewriter Effect
        const typewriterText = ["Web Developer", "UI/UX Designer", "Tech Enthusiast"];
        let count = 0;
        let index = 0;
        let currentText = "";
        let letter = "";

        (function type() {
            if (count === typewriterText.length) count = 0;
            currentText = typewriterText[count];
            letter = currentText.slice(0, ++index);
            
            document.querySelector(".typewriter").textContent = letter;
            if (letter.length === currentText.length) {
                count++;
                index = 0;
                setTimeout(type, 2000);
            } else {
                setTimeout(type, 100);
            }
        })();
    </script>
</body>
</html>


//scipt code

// Add after the existing script
const canvas = document.createElement('canvas');
document.querySelector('.animated-bg').appendChild(canvas);
const ctx = canvas.getContext('2d');
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

const particles = [];
class Particle {
    constructor() {
        this.x = Math.random() * canvas.width;
        this.y = Math.random() * canvas.height;
        this.size = Math.random() * 2;
        this.speedX = Math.random() * 3 - 1.5;
        this.speedY = Math.random() * 3 - 1.5;
    }

    update() {
        this.x += this.speedX;
        this.y += this.speedY;
        if (this.x > canvas.width) this.x = 0;
        if (this.x < 0) this.x = canvas.width;
        if (this.y > canvas.height) this.y = 0;
        if (this.y < 0) this.y = canvas.height;
    }

    draw() {
        ctx.fillStyle = 'rgba(255, 255, 255, 0.5)';
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
        ctx.fill();
    }
}

function init() {
    for (let i = 0; i < 100; i++) {
        particles.push(new Particle());
    }
}

function animate() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    particles.forEach(particle => {
        particle.update();
        particle.draw();
    });
    requestAnimationFrame(animate);
}

init();
animate();
